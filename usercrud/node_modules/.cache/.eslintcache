[{"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\index.js":"1","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\reportWebVitals.js":"2","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\App.js":"3","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\LoginForm.js":"4","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\Posts.js":"5","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\CreatePost.js":"6","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\Navbar.js":"7","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\UserHome.js":"8","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\RegistrationForm.js":"9","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\PostView.js":"10","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\UserPosts.js":"11","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\UpdatePost.js":"12","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\Footer.js":"13","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\Cards\\PostCard.js":"14","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\AddComment.js":"15","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\PostInfo.js":"16","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\Comments.js":"17","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\Button.js":"18","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\UserHome\\TypeWriter.js":"19","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\UpdateComment.js":"20","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\redux\\store.js":"21","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\redux\\reducer.js":"22"},{"size":928,"mtime":1674541001520,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1671432507103,"results":"25","hashOfConfig":"24"},{"size":1287,"mtime":1673947276827,"results":"26","hashOfConfig":"24"},{"size":5261,"mtime":1674541674398,"results":"27","hashOfConfig":"24"},{"size":1678,"mtime":1673949919718,"results":"28","hashOfConfig":"24"},{"size":5143,"mtime":1674542006450,"results":"29","hashOfConfig":"24"},{"size":4755,"mtime":1674471643445,"results":"30","hashOfConfig":"24"},{"size":2509,"mtime":1674468878177,"results":"31","hashOfConfig":"24"},{"size":5992,"mtime":1673951834113,"results":"32","hashOfConfig":"24"},{"size":4498,"mtime":1674468708854,"results":"33","hashOfConfig":"24"},{"size":3104,"mtime":1674468954854,"results":"34","hashOfConfig":"24"},{"size":6120,"mtime":1674541590893,"results":"35","hashOfConfig":"24"},{"size":635,"mtime":1674036120062,"results":"36","hashOfConfig":"24"},{"size":1420,"mtime":1674543014273,"results":"37","hashOfConfig":"24"},{"size":669,"mtime":1673442180733,"results":"38","hashOfConfig":"24"},{"size":989,"mtime":1673934972820,"results":"39","hashOfConfig":"24"},{"size":5037,"mtime":1674469106150,"results":"40","hashOfConfig":"24"},{"size":322,"mtime":1673257370543,"results":"41","hashOfConfig":"24"},{"size":502,"mtime":1673262526950,"results":"42","hashOfConfig":"24"},{"size":659,"mtime":1673442143549,"results":"43","hashOfConfig":"24"},{"size":1024,"mtime":1674542048706,"results":"44","hashOfConfig":"24"},{"size":521,"mtime":1674467509419,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lqqx85",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"52"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\index.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\App.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\LoginForm.js",["120"],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\Posts.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\CreatePost.js",["121"],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\Navbar.js",["122"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"./posts_assets/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../redux/reducer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { get_auth } from \"../redux/reducer\";\r\n\r\nconst baseURL = \"http://localhost:3030/\";\r\n\r\nexport default function Navbar() {\r\n  const navigate = useNavigate();\r\n  const [user, setuser] = useState();\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(get_auth);\r\n  const token = auth?.token;\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const logindata = async (token) => {\r\n    let data = await me(token);\r\n    setuser(data);\r\n    // console.log(data, 'user data');\r\n  };\r\n\r\n  async function me(token1) {\r\n    return await fetch(`${baseURL}me`, {\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token1}`,\r\n      },\r\n    }).then((data) => data.json());\r\n  }\r\n\r\n  useEffect(() => {\r\n    logindata(token);\r\n  }, [token]);\r\n\r\n  if (token && user) {\r\n    return (\r\n      <div>\r\n        <nav\r\n          className=\"navbar fixed-top navbar-expand-lg navbar-dark\"\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient( 178.6deg,  rgba(20,36,50,1) 11.8%, rgba(124,143,161,1) 83.8% )\",\r\n          }}\r\n        >\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n              BLOG\r\n            </Link>\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    className=\"nav-link active\"\r\n                    aria-current=\"page\"\r\n                    to={\"/userhome\"}\r\n                  >\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    className=\"nav-link active\"\r\n                    to={`/userposts/${user.id}`}\r\n                  >\r\n                    My Posts\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link active\" to={`/createpost`}>\r\n                    Add Post\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n              <div className=\"d-flex\">\r\n                <Button\r\n                  className=\"btn btn-outline-warning\"\r\n                  onClick={() => handleLogout()}\r\n                  title=\"Logout\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"mb-4\">\r\n        <nav\r\n          className=\"navbar fixed-top navbar-expand-lg navbar-dark \"\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient( 178.6deg,  rgba(20,36,50,1) 11.8%, rgba(124,143,161,1) 83.8% )\",\r\n          }}\r\n        >\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to={\"/\"}>\r\n              BLOG\r\n            </Link>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    className=\"nav-link active\"\r\n                    aria-current=\"page\"\r\n                    to={\"/\"}\r\n                  >\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link active\" to={\"/registration\"}>\r\n                    Register\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link active\" to={\"/login\"}>\r\n                    LogIn\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\UserHome.js",["123"],[],"import React, { useEffect, useState } from \"react\";\r\nimport TypeWriter from \"./UserHome/TypeWriter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { get_auth } from \"../redux/reducer\";\r\n\r\nconst baseURL = \"http://localhost:3030/\";\r\n\r\nexport default function UserHome() {\r\n  const [user, setuser] = useState();\r\n  const auth = useSelector(get_auth);\r\n  const token = auth?.token;\r\n\r\n  const logindata = async (token) => {\r\n    let data = await me(token);\r\n    setuser(data);\r\n    // console.log(data, 'user data');\r\n  };\r\n\r\n  async function me(token1) {\r\n    return await fetch(`${baseURL}me`, {\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token1}`,\r\n      },\r\n    }).then((data) => data.json());\r\n  }\r\n\r\n  useEffect(() => {\r\n    logindata(token);\r\n  }, [token]);\r\n\r\n  if (!user) return null;\r\n  // console.log(user.name);\r\n  return (\r\n    <div\r\n      style={{\r\n        background: \"rgb(2,0,36)\",\r\n        backgroundImage:\r\n          \"linear-gradient(200deg, rgba(2,0,36,1) 0%, rgba(9,85,121,1) 35%, rgba(0,212,255,1) 100%)\",\r\n        height: \"100vh\",\r\n        color: \"white\",\r\n        marginTop: \"3.5rem\",\r\n      }}\r\n      className=\"border border-warning\"\r\n    >\r\n      <div className=\"container\">\r\n        <h2> Welcome {user.name}😎 </h2>{\" \"}\r\n      </div>{\" \"}\r\n      <div\r\n        className=\"container \"\r\n        style={{\r\n          fontSize: \"2rem\",\r\n          fontWeight: \"bold\",\r\n          color: \"transparent\",\r\n          background: \"linear-gradient(90deg, #00DBDE 0%, hwb(241deg 18% 25%))\",\r\n          WebkitBackgroundClip: \"text\",\r\n          WebkitTextFillColor: \"transparent\",\r\n          height: \"12rem\",\r\n        }}\r\n      >\r\n        <TypeWriter\r\n          text={\r\n            \"I hope you are well. Your welcome you login here, now you can start your journey with us. <br /> You can create your posts and see other people's posts and enjoy content\"\r\n          }\r\n        />{\" \"}\r\n      </div>{\" \"}\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          fontSize: \"6rem\",\r\n          fontWeight: \"bold\",\r\n          color: \"transparent\",\r\n          background: \"linear-gradient(90deg, #00DBDE 0%, hwb(241deg 18% 25%))\",\r\n          WebkitBackgroundClip: \"text\",\r\n          WebkitTextFillColor: \"transparent\",\r\n        }}\r\n      >\r\n        <TypeWriter\r\n          text={\"EXPLORE CONNECT<br />LIVE\"}\r\n          delay={100}\r\n          deleteSpeed={545}\r\n        />{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\RegistrationForm.js",["124"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst baseURL = \"http://localhost:3030/\";\r\n\r\nexport default function RegistrationForm() {\r\n  const [user, setUser] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(`${baseURL}`)\r\n      .then((res) => {\r\n        res.json();\r\n      })\r\n      .then((data) => {\r\n        setUser(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }, []);\r\n\r\n  //Validation.....\r\n  const schema = Yup.object().shape({\r\n    Name: Yup.string().required(\"Name is required field!\"),\r\n    Email: Yup.string()\r\n      .required(\"Email is required field!\")\r\n      .email(\"Format error\"),\r\n    password: Yup.string()\r\n      .required(\"Password Required!\")\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n    confirmpwd: Yup.string()\r\n      .required(\"Confirm password is required!\")\r\n      .oneOf([Yup.ref(\"password\")], \"Confirm password must be same!\"),\r\n  });\r\n\r\n  const formresolver = { resolver: yupResolver(schema) };\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm(formresolver);\r\n\r\n  const onSubmit = (data) => {\r\n    fetch(`${baseURL}signup`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: data.Name,\r\n        email: data.Email,\r\n        password: data.password,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 409) {\r\n        swal(\r\n          \"Success\",\r\n          \"Registration Successful! Enjoy the journey.\",\r\n          \"success\"\r\n        );\r\n        navigate(\"/login\");\r\n      } else {\r\n        swal(\"Warning\", \"Email already registred. Please Login!\", \"warning\");\r\n        navigate(\"/login\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      className=\"border border-warning\"\r\n      style={{\r\n        marginTop: \"3.5rem\",\r\n        backgroundImage: \"linear-gradient(to right, #6a11cb 0%, #2575fc 100%)\",\r\n      }}\r\n    >\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        noValidate\r\n        style={{ padding: \"1rem\" }}\r\n      >\r\n        <div className=\"container h-100\">\r\n          <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n            <div className=\"col-xl-9\">\r\n              <h1 className=\"text-white mb-4\">Registration Form</h1>\r\n              <div className=\"card\" style={{ borderRadius: \"15px\" }}>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row align-items-center pt-4 pb-3\">\r\n                    <div className=\"col-md-3 ps-5\">\r\n                      <h6 className=\"mb-0\">Full name</h6>\r\n                    </div>\r\n                    <div className=\"col-md-9 pe-5\">\r\n                      <input\r\n                        {...register(\"Name\")}\r\n                        type=\"text\"\r\n                        className={`form-control form-control-lg ${\r\n                          errors.Name ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"mx-n3\" />\r\n                  <div className=\"row align-items-center py-3\">\r\n                    <div className=\"col-md-3 ps-5\">\r\n                      <h6 className=\"mb-0\">Email address</h6>\r\n                    </div>\r\n                    <div className=\"col-md-9 pe-5\">\r\n                      <input\r\n                        {...register(\"Email\")}\r\n                        type=\"email\"\r\n                        placeholder=\"example@example.com\"\r\n                        className={`form-control form-control-lg ${\r\n                          errors.Email ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"mx-n3\" />\r\n                  <div className=\"row align-items-center py-3\">\r\n                    <div className=\"col-md-3 ps-5\">\r\n                      <h6 className=\"mb-0\">Password</h6>\r\n                    </div>\r\n                    <div className=\"col-md-9 pe-5\">\r\n                      <input\r\n                        name=\"password\"\r\n                        {...register(\"password\")}\r\n                        className={`form-control form-control-lg ${\r\n                          errors.password ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row align-items-center py-3\">\r\n                    <div className=\"col-md-3 ps-5\">\r\n                      <h6 className=\"mb-0\">Confirm Password</h6>\r\n                    </div>\r\n                    <div className=\"col-md-9 pe-5\">\r\n                      <input\r\n                        {...register(\"confirmpwd\")}\r\n                        className={`form-control form-control-lg ${\r\n                          errors.password ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                        placeholder=\"Confirm Password\"\r\n                        type=\"password\"\r\n                        name=\"confirmpwd\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"mx-n3\" />\r\n\r\n                  <div className=\"px-5 py-4\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-outline-warning btn-lg \"\r\n                    >\r\n                      Register\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\PostView.js",["125"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport PostInfo from \"./posts_assets/PostInfo\";\r\nimport Comments from \"./posts_assets/Comments\";\r\nimport AddComment from \"./posts_assets/AddComment\";\r\nimport Button from \"./posts_assets/Button\";\r\nimport swal from \"sweetalert\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { get_auth } from \"../redux/reducer\";\r\n\r\nconst baseURL = \"http://localhost:3030/\";\r\nexport default function PostView() {\r\n  const [posts, setPosts] = useState(null);\r\n  const [user, setUser] = useState();\r\n  const [addedCommentToken, setAddedCommentToken] = useState(\"\");\r\n  const auth = useSelector(get_auth);\r\n  const { slug } = useParams();\r\n  const navigate = useNavigate();\r\n  const token = auth?.token;\r\n\r\n  const fetchingPost = async () => {\r\n    await fetch(`${baseURL}posts/${slug}`)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setPosts(data);\r\n      });\r\n  };\r\n  const userdata = async () => {\r\n    await fetch(`${baseURL}me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setUser(data);\r\n      });\r\n  };\r\n\r\n  //user commenting on post\r\n\r\n  async function postcomment(comment) {\r\n    if (posts.length) {\r\n      let id = posts[0].id;\r\n      if (token) {\r\n        await fetch(`${baseURL}comments/${id}`, {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            comment: comment,\r\n            username: user.name,\r\n            // author_id: data.authorid\r\n          }),\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }).then((res) => {\r\n          setAddedCommentToken(new Date().getTime().toString());\r\n          // get_comments(posts)\r\n        });\r\n      } else {\r\n        // setShow(true);\r\n        swal(\"Warning!\", \"You must Login!\", \"warning\");\r\n      }\r\n    }\r\n  }\r\n\r\n  //Delete Post\r\n  // const deletepost = (id) => {\r\n  //   fetch(`${baseURL}posts/${id}`, {\r\n  //     method: \"DELETE\",\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`,\r\n  //     },\r\n  //   }).then((data) => {\r\n  //     console.log(data);\r\n  //   });\r\n  //   setPosts(\r\n  //     posts.filter((post) => {\r\n  //       // console.log(post.id);\r\n  //       return post.id !== id;\r\n  //     })\r\n  //   );\r\n  //   // toast.error(\"Deleted Successfully!\")\r\n  //   swal(\"Deleted\", \"Post Deleted\", \"error\");\r\n  // };\r\n\r\n  useEffect(() => {\r\n    fetchingPost();\r\n    userdata();\r\n  }, []);\r\n\r\n  const backButton = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // console.log(show);\r\n  if (!posts) return null;\r\n  return (\r\n    <div\r\n      style={{\r\n        background: \"rgb(2,0,36)\",\r\n        backgroundImage:\r\n          \"linear-gradient(200deg, rgba(2,0,36,1) 0%, rgba(9,85,121,1) 35%, rgba(0,212,255,1) 100%)\",\r\n        padding: \"5px\",\r\n        color: \"white\",\r\n        marginTop: \"3.5rem\",\r\n      }}\r\n      className=\"border border-warning\"\r\n    >\r\n      <div className=\"d-flex card-body\" style={{ marginTop: \"1rem\" }}>\r\n        <Button className=\"btn btn-warning\" onClick={backButton} title=\"Back\" />\r\n      </div>\r\n      {\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"d-inline-flex\" style={{ width: \"40rem\" }}>\r\n            <div className=\"card-body p-2\">\r\n              {/* Parent to child */}\r\n              <PostInfo\r\n                title={posts[0].title}\r\n                postimage={posts[0].image}\r\n                date={posts[0].created_at}\r\n                updateddate={posts[0].updated_at}\r\n                name={posts[0].name}\r\n                description={posts[0].description}\r\n              />\r\n              {/* <Button\r\n                className=\"btn btn-danger btn-md mx-3\"\r\n                onClick={() => {\r\n                  deletepost(posts[0].id);\r\n                }}\r\n                title={\"Delete Post\"}\r\n              /> */}\r\n              <Comments\r\n                postId={posts[0].id}\r\n                addedCommentToken={addedCommentToken}\r\n                authorID={posts[0].author_id}\r\n              />\r\n\r\n              {/* child to parent */}\r\n              <AddComment\r\n                postcomment={(comment) => postcomment(comment)}\r\n                addedCommentToken={addedCommentToken}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\UserPosts.js",["126"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport Button from \"./posts_assets/Button\";\r\nimport Comments from \"./posts_assets/Comments\";\r\nimport PostInfo from \"./posts_assets/PostInfo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { get_auth } from \"../redux/reducer\";\r\n\r\nconst baseURL = \"http://localhost:3030/\";\r\n\r\nexport default function UserPosts() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [post, setpost] = useState([]);\r\n  const auth = useSelector(get_auth);\r\n  const token = auth?.token;\r\n\r\n  const logindata = async (token) => {\r\n    let data = await me(token);\r\n    setpost(data);\r\n  };\r\n\r\n  async function me(token1) {\r\n    return await fetch(`${baseURL}me/${id}`, {\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token1}`,\r\n      },\r\n    }).then((data) => data.json());\r\n  }\r\n\r\n  //Delete Post\r\n  const deletepost = (id) => {\r\n    fetch(`${baseURL}posts/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((data) => {\r\n      console.log(data);\r\n    });\r\n    setpost(\r\n      post.filter((post) => {\r\n        // console.log(post.id);\r\n        return post.id !== id;\r\n      })\r\n    );\r\n    // toast.error(\"Deleted Successfully!\")\r\n    swal(\"Deleted\", \"Post Deleted\", \"error\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    logindata(token);\r\n  }, [token]);\r\n\r\n  if (!post) return null;\r\n  return (\r\n    <div\r\n      className=\"border border-warning\"\r\n      style={{\r\n        background: \"rgb(2,0,36)\",\r\n        backgroundImage:\r\n          \"linear-gradient(200deg, rgba(2,0,36,1) 0%, rgba(9,85,121,1) 35%, rgba(0,212,255,1) 100%)\",\r\n        color: \"white\",\r\n        marginTop: \"3.5rem\",\r\n      }}\r\n    >\r\n      {post.map((p) => {\r\n        return (\r\n          <div key={p.id} className=\"d-flex justify-content-center \">\r\n            <div className=\"d-inline-flex\" style={{ width: \"40rem\" }}>\r\n              <div className=\"card-body p-2\">\r\n                <PostInfo\r\n                  title={p.title}\r\n                  name={p.name}\r\n                  date={p.created_at}\r\n                  description={p.description}\r\n                  updateddate={p.updated_at}\r\n                  postimage={p.image}\r\n                />\r\n                <Comments postId={p.id} authorID={p.author_id} />\r\n                <Button\r\n                  className=\"btn btn-warning btn-md\"\r\n                  onClick={() => {\r\n                    navigate(`/updateposts/${p.slug}`);\r\n                  }}\r\n                  title={\"Update Post\"}\r\n                />\r\n                <Button\r\n                  className=\"btn btn-danger btn-md mx-3\"\r\n                  onClick={() => {\r\n                    deletepost(p.id);\r\n                  }}\r\n                  title={\"Delete Post\"}\r\n                />\r\n                <hr className=\"mx-n3\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\UpdatePost.js",["127"],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\Footer.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\Cards\\PostCard.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\AddComment.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\PostInfo.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\Comments.js",["128"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport UpdateComment from \"./UpdateComment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { get_auth } from \"../../redux/reducer\";\r\n\r\nconst baseURL = \"http://localhost:3030/\";\r\n\r\nexport default function Comments(props) {\r\n  const [comments, setComments] = useState([]);\r\n  const [userData, setUSerData] = useState();\r\n  const [commentInput, setCommentInput] = useState(false);\r\n  const [addedCommentToken, setAddedCommentToken] = useState();\r\n  const [commentData, setCommentData] = useState(\"\");\r\n  const [commentId, setCommentID] = useState(\"\");\r\n  const auth = useSelector(get_auth);\r\n  const token = auth?.token;\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    loggedInData();\r\n    get_comments();\r\n  }, [addedCommentToken, props.addedCommentToken]);\r\n\r\n  const get_comments = async () => {\r\n    await fetch(`${baseURL}comments/${props.postId}`)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setComments(data);\r\n        // console.log(data, \"comment data\");\r\n      });\r\n  };\r\n\r\n  //Delete Comments\r\n  const delete_comments = async (id) => {\r\n    await fetch(`${baseURL}comments/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.affectedRows > 0) {\r\n          setComments(\r\n            comments.filter((comment) => {\r\n              return comment.id !== id;\r\n            })\r\n          );\r\n        } else {\r\n          // toast.warning(\"You're able to delete only that comments which are on your post!\")\r\n        }\r\n      });\r\n  };\r\n\r\n  const loggedInData = async () => {\r\n    await fetch(`${baseURL}me`, {\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setUSerData(data);\r\n        // console.log(data, \"LoggedIn userData\");\r\n      });\r\n  };\r\n\r\n  //get comment by comment id\r\n\r\n  const getcomments = async (id) => {\r\n    await fetch(`${baseURL}commentsbyid/${id}`)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setCommentData(data);\r\n        // console.log(data[0].comments);\r\n      });\r\n  };\r\n\r\n  //Update Comment\r\n\r\n  const update_comments = async (comment) => {\r\n    // console.log(comment);\r\n    await fetch(`${baseURL}comments/${commentData[0].id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        updatedcomment: comment,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => {\r\n      setAddedCommentToken(new Date().getTime().toString());\r\n      setCommentID(0);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\"card-text\">Comments:</p>\r\n      {comments &&\r\n        comments.map((comment, index) => {\r\n          return (\r\n            <>\r\n              <div className=\"d-inline-flex\" key={index}>\r\n                <p>\r\n                  <b>{comment.user_name}</b> commented on post at{\" \"}\r\n                  {new Date(comment.commentAt).toDateString()} <br /> \"\r\n                  {comment.comments}\"\r\n                </p>\r\n                {userData &&\r\n                  (props.authorID === userData.id ||\r\n                    comment.user_id === userData.id) && (\r\n                    <div className=\"m-2\">\r\n                      <Button\r\n                        className=\"btn btn-danger btn-sm m-1\"\r\n                        onClick={() => {\r\n                          delete_comments(comment.id);\r\n                        }}\r\n                        title=\"Delete\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                {userData && comment.user_id === userData.id && (\r\n                  <div className=\"m-2\">\r\n                    <Button\r\n                      className=\"btn btn-warning btn-sm m-1\"\r\n                      onClick={() => {\r\n                        getcomments(comment.id);\r\n                        if (commentId !== comment.id) {\r\n                          setCommentID(comment.id);\r\n                        } else {\r\n                          setCommentID(0);\r\n                        }\r\n\r\n                        setCommentInput(!commentInput);\r\n                      }}\r\n                      title=\"Update\"\r\n                    />\r\n                    {/* {(commentInput && comment.id) && ()} */}\r\n                    {commentId === comment.id && (\r\n                      <UpdateComment\r\n                        update_comments={(comment) => update_comments(comment)}\r\n                        addedCommentToken={addedCommentToken}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <hr className=\"mx-n10\" />\r\n            </>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\Button.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\UserHome\\TypeWriter.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\components\\posts_assets\\UpdateComment.js",["129"],[],"import React, { useState, useEffect } from 'react'\r\nimport Button from './Button'\r\n\r\nexport default function (props) {\r\n\r\n    const [input, setInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        setInput('')\r\n    }, [props.addedCommentToken])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-body p-2\">\r\n                <p>Update Comment</p>\r\n                <input type=\"text\" value={input} placeholder='Comment' style={{ borderRadius: \"6px\" }} onChange={(e) => { setInput(e.target.value) }} />\r\n                <Button onClick={() => { props.update_comments(input) }} title={\"Update comment\"} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\redux\\store.js",[],[],"C:\\Users\\Asus\\OneDrive\\Desktop\\JamTechTechnologies\\User_Project\\BlogPosts\\usercrud\\src\\redux\\reducer.js",[],[],{"ruleId":"130","severity":1,"message":"131","line":15,"column":10,"nodeType":"132","messageId":"133","endLine":15,"endColumn":19},{"ruleId":"130","severity":1,"message":"134","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":41,"column":6,"nodeType":"137","endLine":41,"endColumn":13,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"136","line":30,"column":6,"nodeType":"137","endLine":30,"endColumn":13,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"140","line":11,"column":10,"nodeType":"132","messageId":"133","endLine":11,"endColumn":14},{"ruleId":"135","severity":1,"message":"141","line":91,"column":6,"nodeType":"137","endLine":91,"endColumn":8,"suggestions":"142"},{"ruleId":"135","severity":1,"message":"136","line":55,"column":6,"nodeType":"137","endLine":55,"endColumn":13,"suggestions":"143"},{"ruleId":"135","severity":1,"message":"144","line":37,"column":6,"nodeType":"137","endLine":37,"endColumn":8,"suggestions":"145"},{"ruleId":"135","severity":1,"message":"146","line":23,"column":6,"nodeType":"137","endLine":23,"endColumn":50,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":4,"column":1,"nodeType":"150","endLine":21,"endColumn":2},"no-unused-vars","'logindata' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logindata'. Either include it or remove the dependency array.","ArrayExpression",["151"],["152"],"'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchingPost' and 'userdata'. Either include them or remove the dependency array.",["153"],["154"],"React Hook useEffect has a missing dependency: 'userpost'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has missing dependencies: 'get_comments' and 'loggedInData'. Either include them or remove the dependency array.",["156"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",{"desc":"157","fix":"158"},{"desc":"157","fix":"159"},{"desc":"160","fix":"161"},{"desc":"157","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [logindata, token]",{"range":"167","text":"168"},{"range":"169","text":"168"},"Update the dependencies array to be: [fetchingPost, userdata]",{"range":"170","text":"171"},{"range":"172","text":"168"},"Update the dependencies array to be: [userpost]",{"range":"173","text":"174"},"Update the dependencies array to be: [addedCommentToken, get_comments, loggedInData, props.addedCommentToken]",{"range":"175","text":"176"},[1159,1166],"[logindata, token]",[826,833],[2623,2625],"[fetchingPost, userdata]",[1519,1526],[1147,1149],"[userpost]",[806,850],"[addedCommentToken, get_comments, loggedInData, props.addedCommentToken]"]