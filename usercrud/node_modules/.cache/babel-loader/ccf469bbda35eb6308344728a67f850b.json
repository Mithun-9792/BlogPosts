{"ast":null,"code":"import { get as r, set as i } from \"react-hook-form\";\nvar e = function e(i, _e, t) {\n    if (i && \"reportValidity\" in i) {\n      var f = r(t, _e);\n      i.setCustomValidity(f && f.message || \"\"), i.reportValidity();\n    }\n  },\n  t = function t(r, i) {\n    var t = function t(_t) {\n      var f = i.fields[_t];\n      f && f.ref && \"reportValidity\" in f.ref ? e(f.ref, _t, r) : f.refs && f.refs.forEach(function (i) {\n        return e(i, _t, r);\n      });\n    };\n    for (var f in i.fields) t(f);\n  },\n  f = function f(e, _f) {\n    _f.shouldUseNativeValidation && t(e, _f);\n    var o = {};\n    for (var a in e) {\n      var n = r(_f.fields, a);\n      i(o, a, Object.assign(e[a], {\n        ref: n && n.ref\n      }));\n    }\n    return o;\n  };\nexport { f as toNestError, t as validateFieldsNatively };","map":null,"metadata":{},"sourceType":"module"}