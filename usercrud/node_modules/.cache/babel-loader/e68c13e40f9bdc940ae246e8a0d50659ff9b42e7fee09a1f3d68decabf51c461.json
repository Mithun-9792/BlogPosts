{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\JamTechTechnologies\\\\User_Project\\\\BlogPosts\\\\usercrud\\\\src\\\\components\\\\posts_assets\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"./Button\";\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import AddComment from './AddComment';\nimport UpdateComment from \"./UpdateComment\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"http://localhost:3030/\";\nexport default function Comments(props) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [userData, setUSerData] = useState();\n  const [commentInput, setCommentInput] = useState(false);\n  const [addedCommentToken, setAddedCommentToken] = useState();\n  const [commentData, setCommentData] = useState(\"\");\n  const [commentId, setCommentID] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  // console.log(props);\n\n  useEffect(() => {\n    loggedInData();\n    get_comments();\n  }, [addedCommentToken, props.addedCommentToken]);\n  const get_comments = async () => {\n    await fetch(`${baseURL}comments/${props.postId}`).then(data => data.json()).then(data => {\n      setComments(data);\n      // console.log(data, \"comment data\");\n    });\n  };\n\n  //Delete Comments\n  const delete_comments = async id => {\n    await fetch(`${baseURL}comments/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      if (data.affectedRows > 0) {\n        setComments(comments.filter(comment => {\n          return comment.id !== id;\n        }));\n      } else {\n        // toast.warning(\"You're able to delete only that comments which are on your post!\")\n      }\n    });\n  };\n  const loggedInData = async () => {\n    await fetch(`${baseURL}me`, {\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(data => data.json()).then(data => {\n      setUSerData(data);\n      // console.log(data, \"LoggedIn userData\");\n    });\n  };\n\n  //get comment by comment id\n\n  const getcomments = async id => {\n    await fetch(`${baseURL}commentsbyid/${id}`).then(data => data.json()).then(data => {\n      setCommentData(data);\n      // console.log(data[0].comments);\n    });\n  };\n\n  //Update Comment\n\n  const update_comments = async comment => {\n    // console.log(comment);\n    await fetch(`${baseURL}comments/${commentData[0].id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        updatedcomment: comment\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      setAddedCommentToken(new Date().getTime().toString());\n      setCommentID(0);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-text\",\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), comments && comments.map((comment, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: comment.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), \" commented on post at\", new Date(comment.commentAt).toDateString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 64\n            }, this), \" \\\"\", comment.comments, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), userData && (props.authorID === userData.id || comment.user_id === userData.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-danger btn-sm m-1\",\n              onClick: () => {\n                delete_comments(comment.id);\n              },\n              title: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), userData && comment.user_id === userData.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-warning btn-sm m-1\",\n              onClick: () => {\n                getcomments(comment.id);\n                if (commentId !== comment.id) {\n                  setCommentID(comment.id);\n                } else {\n                  setCommentID(0);\n                }\n                setCommentInput(!commentInput);\n              },\n              title: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this), commentId === comment.id && /*#__PURE__*/_jsxDEV(UpdateComment, {\n              update_comments: comment => update_comments(comment),\n              addedCommentToken: addedCommentToken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"mx-n10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true);\n}\n_s(Comments, \"ERHbqAml9CXfF1NybDdhPsvluzo=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","Button","UpdateComment","baseURL","Comments","props","comments","setComments","userData","setUSerData","commentInput","setCommentInput","addedCommentToken","setAddedCommentToken","commentData","setCommentData","commentId","setCommentID","token","localStorage","getItem","loggedInData","get_comments","fetch","postId","then","data","json","delete_comments","id","method","headers","Authorization","res","affectedRows","filter","comment","getcomments","update_comments","body","JSON","stringify","updatedcomment","Date","getTime","toString","map","index","user_name","commentAt","toDateString","authorID","user_id"],"sources":["C:/Users/Asus/OneDrive/Desktop/JamTechTechnologies/User_Project/BlogPosts/usercrud/src/components/posts_assets/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"./Button\";\r\n// import { toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import AddComment from './AddComment';\r\nimport UpdateComment from \"./UpdateComment\";\r\n\r\nconst baseURL = \"http://localhost:3030/\";\r\n\r\nexport default function Comments(props) {\r\n  const [comments, setComments] = useState([]);\r\n  const [userData, setUSerData] = useState();\r\n  const [commentInput, setCommentInput] = useState(false);\r\n  const [addedCommentToken, setAddedCommentToken] = useState();\r\n  const [commentData, setCommentData] = useState(\"\");\r\n  const [commentId, setCommentID] = useState(\"\");\r\n  const token = localStorage.getItem(\"token\");\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    loggedInData();\r\n    get_comments();\r\n  }, [addedCommentToken, props.addedCommentToken]);\r\n\r\n  const get_comments = async () => {\r\n    await fetch(`${baseURL}comments/${props.postId}`)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setComments(data);\r\n        // console.log(data, \"comment data\");\r\n      });\r\n  };\r\n\r\n  //Delete Comments\r\n  const delete_comments = async (id) => {\r\n    await fetch(`${baseURL}comments/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.affectedRows > 0) {\r\n          setComments(\r\n            comments.filter((comment) => {\r\n              return comment.id !== id;\r\n            })\r\n          );\r\n        } else {\r\n          // toast.warning(\"You're able to delete only that comments which are on your post!\")\r\n        }\r\n      });\r\n  };\r\n\r\n  const loggedInData = async () => {\r\n    await fetch(`${baseURL}me`, {\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setUSerData(data);\r\n        // console.log(data, \"LoggedIn userData\");\r\n      });\r\n  };\r\n\r\n  //get comment by comment id\r\n\r\n  const getcomments = async (id) => {\r\n    await fetch(`${baseURL}commentsbyid/${id}`)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setCommentData(data);\r\n        // console.log(data[0].comments);\r\n      });\r\n  };\r\n\r\n  //Update Comment\r\n\r\n  const update_comments = async (comment) => {\r\n    // console.log(comment);\r\n    await fetch(`${baseURL}comments/${commentData[0].id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        updatedcomment: comment,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => {\r\n      setAddedCommentToken(new Date().getTime().toString());\r\n      setCommentID(0);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\"card-text\">Comments:</p>\r\n      {comments &&\r\n        comments.map((comment, index) => {\r\n          return (\r\n            <>\r\n              <div className=\"d-inline-flex\" key={index}>\r\n                <p>\r\n                  <b>{comment.user_name}</b> commented on post at\r\n                  {new Date(comment.commentAt).toDateString()} <br /> \"\r\n                  {comment.comments}\"\r\n                </p>\r\n                {userData &&\r\n                  (props.authorID === userData.id ||\r\n                    comment.user_id === userData.id) && (\r\n                    <div className=\"m-2\">\r\n                      <Button\r\n                        className=\"btn btn-danger btn-sm m-1\"\r\n                        onClick={() => {\r\n                          delete_comments(comment.id);\r\n                        }}\r\n                        title=\"Delete\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                {userData && comment.user_id === userData.id && (\r\n                  <div className=\"m-2\">\r\n                    <Button\r\n                      className=\"btn btn-warning btn-sm m-1\"\r\n                      onClick={() => {\r\n                        getcomments(comment.id);\r\n                        if (commentId !== comment.id) {\r\n                          setCommentID(comment.id);\r\n                        } else {\r\n                          setCommentID(0);\r\n                        }\r\n\r\n                        setCommentInput(!commentInput);\r\n                      }}\r\n                      title=\"Update\"\r\n                    />\r\n                    {/* {(commentInput && comment.id) && ()} */}\r\n                    {commentId === comment.id && (\r\n                      <UpdateComment\r\n                        update_comments={(comment) => update_comments(comment)}\r\n                        addedCommentToken={addedCommentToken}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <hr className=\"mx-n10\" />\r\n            </>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}