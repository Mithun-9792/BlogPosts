{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\JamTechTechnologies\\\\User_Project\\\\BlogPosts\\\\usercrud\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\JamTechTechnologies\\\\User_Project\\\\BlogPosts\\\\usercrud\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\JamTechTechnologies\\\\User_Project\\\\BlogPosts\\\\usercrud\\\\src\\\\components\\\\posts_assets\\\\Comments.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"./Button\";\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import AddComment from './AddComment';\nimport UpdateComment from \"./UpdateComment\";\nvar baseURL = \"http://localhost:3030/\";\nexport default function Comments(props) {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    comments = _useState2[0],\n    setComments = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userData = _useState4[0],\n    setUSerData = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    commentInput = _useState6[0],\n    setCommentInput = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    addedCommentToken = _useState8[0],\n    setAddedCommentToken = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    commentData = _useState10[0],\n    setCommentData = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    commentId = _useState12[0],\n    setCommentID = _useState12[1];\n  var token = localStorage.getItem(\"token\");\n  // console.log(props);\n\n  useEffect(function () {\n    loggedInData();\n    get_comments();\n  }, [addedCommentToken, props.addedCommentToken]);\n  var get_comments = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(baseURL, \"comments/\").concat(props.postId)).then(function (data) {\n              return data.json();\n            }).then(function (data) {\n              setComments(data);\n              // console.log(data, \"comment data\");\n            });\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function get_comments() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  //Delete Comments\n  var delete_comments = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(baseURL, \"comments/\").concat(id), {\n              method: \"DELETE\",\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              if (data.affectedRows > 0) {\n                setComments(comments.filter(function (comment) {\n                  return comment.id !== id;\n                }));\n              } else {\n                // toast.warning(\"You're able to delete only that comments which are on your post!\")\n              }\n            });\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function delete_comments(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loggedInData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"\".concat(baseURL, \"me\"), {\n              headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n                Authorization: \"Bearer \".concat(token)\n              }\n            }).then(function (data) {\n              return data.json();\n            }).then(function (data) {\n              setUSerData(data);\n              // console.log(data, \"LoggedIn userData\");\n            });\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function loggedInData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  //get comment by comment id\n\n  var getcomments = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id) {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(\"\".concat(baseURL, \"commentsbyid/\").concat(id)).then(function (data) {\n              return data.json();\n            }).then(function (data) {\n              setCommentData(data);\n              // console.log(data[0].comments);\n            });\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return function getcomments(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  //Update Comment\n\n  var _update_comments = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(comment) {\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(baseURL, \"comments/\").concat(commentData[0].id), {\n              method: \"PUT\",\n              body: JSON.stringify({\n                updatedcomment: comment\n              }),\n              headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n                Authorization: \"Bearer \".concat(token)\n              }\n            }).then(function (res) {\n              setAddedCommentToken(new Date().getTime().toString());\n              setCommentID(0);\n            });\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function update_comments(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Comments:\"), comments && comments.map(function (comment, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline-flex\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, comment.user_name), \" commented on post at\", \" \", new Date(comment.commentAt).toDateString(), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 64\n      }\n    }), \" \\\"\", comment.comments, \"\\\"\"), userData && (props.authorID === userData.id || comment.user_id === userData.id) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-danger btn-sm m-1\",\n      onClick: function onClick() {\n        delete_comments(comment.id);\n      },\n      title: \"Delete\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    })), userData && comment.user_id === userData.id && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-warning btn-sm m-1\",\n      onClick: function onClick() {\n        getcomments(comment.id);\n        if (commentId !== comment.id) {\n          setCommentID(comment.id);\n        } else {\n          setCommentID(0);\n        }\n        setCommentInput(!commentInput);\n      },\n      title: \"Update\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }), commentId === comment.id && /*#__PURE__*/React.createElement(UpdateComment, {\n      update_comments: function update_comments(comment) {\n        return _update_comments(comment);\n      },\n      addedCommentToken: addedCommentToken,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"mx-n10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }));\n  }));\n}","map":{"version":3,"names":["React","useEffect","useState","Button","UpdateComment","baseURL","Comments","props","comments","setComments","userData","setUSerData","commentInput","setCommentInput","addedCommentToken","setAddedCommentToken","commentData","setCommentData","commentId","setCommentID","token","localStorage","getItem","loggedInData","get_comments","fetch","postId","then","data","json","delete_comments","id","method","headers","Authorization","res","affectedRows","filter","comment","getcomments","update_comments","body","JSON","stringify","updatedcomment","Date","getTime","toString","map","index","user_name","commentAt","toDateString","authorID","user_id"],"sources":["C:/Users/Asus/OneDrive/Desktop/JamTechTechnologies/User_Project/BlogPosts/usercrud/src/components/posts_assets/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"./Button\";\r\n// import { toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import AddComment from './AddComment';\r\nimport UpdateComment from \"./UpdateComment\";\r\n\r\nconst baseURL = \"http://localhost:3030/\";\r\n\r\nexport default function Comments(props) {\r\n  const [comments, setComments] = useState([]);\r\n  const [userData, setUSerData] = useState();\r\n  const [commentInput, setCommentInput] = useState(false);\r\n  const [addedCommentToken, setAddedCommentToken] = useState();\r\n  const [commentData, setCommentData] = useState(\"\");\r\n  const [commentId, setCommentID] = useState(\"\");\r\n  const token = localStorage.getItem(\"token\");\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    loggedInData();\r\n    get_comments();\r\n  }, [addedCommentToken, props.addedCommentToken]);\r\n\r\n  const get_comments = async () => {\r\n    await fetch(`${baseURL}comments/${props.postId}`)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setComments(data);\r\n        // console.log(data, \"comment data\");\r\n      });\r\n  };\r\n\r\n  //Delete Comments\r\n  const delete_comments = async (id) => {\r\n    await fetch(`${baseURL}comments/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.affectedRows > 0) {\r\n          setComments(\r\n            comments.filter((comment) => {\r\n              return comment.id !== id;\r\n            })\r\n          );\r\n        } else {\r\n          // toast.warning(\"You're able to delete only that comments which are on your post!\")\r\n        }\r\n      });\r\n  };\r\n\r\n  const loggedInData = async () => {\r\n    await fetch(`${baseURL}me`, {\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setUSerData(data);\r\n        // console.log(data, \"LoggedIn userData\");\r\n      });\r\n  };\r\n\r\n  //get comment by comment id\r\n\r\n  const getcomments = async (id) => {\r\n    await fetch(`${baseURL}commentsbyid/${id}`)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setCommentData(data);\r\n        // console.log(data[0].comments);\r\n      });\r\n  };\r\n\r\n  //Update Comment\r\n\r\n  const update_comments = async (comment) => {\r\n    // console.log(comment);\r\n    await fetch(`${baseURL}comments/${commentData[0].id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        updatedcomment: comment,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => {\r\n      setAddedCommentToken(new Date().getTime().toString());\r\n      setCommentID(0);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\"card-text\">Comments:</p>\r\n      {comments &&\r\n        comments.map((comment, index) => {\r\n          return (\r\n            <>\r\n              <div className=\"d-inline-flex\" key={index}>\r\n                <p>\r\n                  <b>{comment.user_name}</b> commented on post at{\" \"}\r\n                  {new Date(comment.commentAt).toDateString()} <br /> \"\r\n                  {comment.comments}\"\r\n                </p>\r\n                {userData &&\r\n                  (props.authorID === userData.id ||\r\n                    comment.user_id === userData.id) && (\r\n                    <div className=\"m-2\">\r\n                      <Button\r\n                        className=\"btn btn-danger btn-sm m-1\"\r\n                        onClick={() => {\r\n                          delete_comments(comment.id);\r\n                        }}\r\n                        title=\"Delete\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                {userData && comment.user_id === userData.id && (\r\n                  <div className=\"m-2\">\r\n                    <Button\r\n                      className=\"btn btn-warning btn-sm m-1\"\r\n                      onClick={() => {\r\n                        getcomments(comment.id);\r\n                        if (commentId !== comment.id) {\r\n                          setCommentID(comment.id);\r\n                        } else {\r\n                          setCommentID(0);\r\n                        }\r\n\r\n                        setCommentInput(!commentInput);\r\n                      }}\r\n                      title=\"Update\"\r\n                    />\r\n                    {/* {(commentInput && comment.id) && ()} */}\r\n                    {commentId === comment.id && (\r\n                      <UpdateComment\r\n                        update_comments={(comment) => update_comments(comment)}\r\n                        addedCommentToken={addedCommentToken}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <hr className=\"mx-n10\" />\r\n            </>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}