{"ast":null,"code":"import { createElement, forwardRef as forwardRef$1, useRef as useRef$1, useState as useState$1, useLayoutEffect as useLayoutEffect$1, useCallback as useCallback$1, useImperativeHandle as useImperativeHandle$1 } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return _assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nvar applyRange = function applyRange(range) {\n  var selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\nvar getRange = function getRange() {\n  var selection = window.getSelection();\n  if (selection && selection.rangeCount > 0) {\n    return selection.getRangeAt(0);\n  }\n  return null;\n};\nvar moveToEnd = function moveToEnd(el) {\n  el.focus();\n  var selection = window.getSelection();\n  if (selection && selection.rangeCount > 0) {\n    selection.selectAllChildren(el); //range 选择obj下所有子内容\n    selection.collapseToEnd(); //光标移至最后\n  }\n};\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar css_248z = \"/* add css styles here (optional) */\\n\\n.styles_editor__9lmdU {\\n  white-space: pre-wrap;\\n  box-sizing: border-box;\\n  width: 100%;\\n  height: 100%;\\n  outline: 0; /* can be weird  overflowed */\\n  cursor: text;\\n}\\n\\n.styles_editor__9lmdU:empty:before {\\n  content: attr(data-placeholder);\\n  color: #b4b4c7;\\n  cursor: inherit;\\n}\\n\";\nvar styles = {\n  \"editor\": \"styles_editor__9lmdU\"\n};\nstyleInject(css_248z);\nvar forwardRef = forwardRef$1,\n  useRef = useRef$1,\n  useState = useState$1,\n  useLayoutEffect = useLayoutEffect$1,\n  useCallback = useCallback$1,\n  useImperativeHandle = useImperativeHandle$1;\nvar Editor = forwardRef(function (props, ref) {\n  var _a;\n  var value = props.value,\n    defaultValue = props.defaultValue,\n    className = props.className,\n    placeholder = props.placeholder,\n    allowInWebDrop = props.allowInWebDrop,\n    processHTML = props.processHTML,\n    processText = props.processText,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onDrop = props.onDrop,\n    onPaste = props.onPaste,\n    restProps = __rest(props, [\"value\", \"defaultValue\", \"className\", \"placeholder\", \"allowInWebDrop\", \"processHTML\", \"processText\", \"onFocus\", \"onBlur\", \"onChange\", \"onDrop\", \"onPaste\"]);\n  var onceChanged = (_a = useState(false), _a[0]),\n    setOnceChanged = _a[1];\n  var elRef = useRef(null);\n  var rangeRef = useRef(null);\n  var clearRange = useCallback(function () {\n    rangeRef.current = null;\n  }, []);\n  var saveRange = useCallback(function () {\n    var range = getRange();\n    rangeRef.current = range;\n  }, []);\n  var restoreRange = useCallback(function () {\n    var range = rangeRef.current;\n    if (range) {\n      applyRange(range);\n    } else {\n      var el = elRef.current;\n      if (el) moveToEnd(el);\n    }\n  }, []);\n  var focus = useCallback(function () {\n    var el = elRef.current;\n    if (el) el.focus();\n  }, []);\n  var insertHTML = useCallback(function (html) {\n    focus();\n    if (processHTML) html = processHTML(html);\n    document.execCommand('insertHTML', false, html);\n  }, [processHTML]);\n  var insertText = useCallback(function (text) {\n    focus();\n    if (processText) text = processText(text);\n    document.execCommand('insertHTML', false, text);\n  }, [processText]);\n  var handleInput = useCallback(function () {\n    var el = elRef.current;\n    if (el) {\n      // fix placeholder\n      if (el.innerHTML === \"\\b\" || el.innerHTML === '<br>' || el.innerHTML === '<div><br></div>') {\n        el.innerHTML = '';\n      }\n      setOnceChanged(true);\n      var newValue = el.innerHTML;\n      if (onChange) onChange(newValue);\n    }\n  }, []);\n  var handleFocus = useCallback(function (e) {\n    restoreRange();\n    if (onFocus) onFocus(e);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    saveRange();\n    if (onBlur) onBlur(e);\n  }, []);\n  var handleDrop = useCallback(function (e) {\n    var files = e.dataTransfer.files || [];\n    // avoid in-web drop unless set to allow\n    if (files.length <= 0 && !allowInWebDrop) {\n      e.preventDefault();\n    }\n    // avoid file-open as browser default\n    if (files.length >= 1) {\n      e.preventDefault();\n    }\n    if (onDrop) onDrop(e);\n  }, [allowInWebDrop]);\n  var handlePaste = useCallback(function (e) {\n    // e.preventDefault();\n    // // const types = e.clipboardData.types || []\n    // // const items = e.clipboardData.items || []\n    // let html = e.clipboardData.getData('text/html');\n    // let text = e.clipboardData.getData('text/plain');\n    // // @todo types & items\n    // if (html) {\n    //   insertHTML(html);\n    // } else if (text) {\n    //   insertText(text);\n    // }\n    // @todo\n    if (onPaste) onPaste(e);\n  }, [insertHTML, insertText]);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: focus,\n      insertHTML: insertHTML,\n      insertText: insertText\n    };\n  }, [insertHTML, insertText]);\n  useLayoutEffect(function () {\n    var el = elRef.current;\n    if (el && value !== undefined && value !== el.innerHTML) {\n      var html = value;\n      if (processHTML) html = processHTML(html);\n      el.innerHTML = html;\n      clearRange();\n    }\n  }, [value, processHTML]);\n  useLayoutEffect(function () {\n    var el = elRef.current;\n    if (el && !onceChanged && value === undefined && defaultValue !== undefined && defaultValue !== el.innerHTML) {\n      var html = defaultValue;\n      if (processHTML) html = processHTML(html);\n      el.innerHTML = html;\n      clearRange();\n    }\n  }, [value, processHTML, defaultValue, onceChanged]);\n  return createElement(\"div\", _assign({\n    ref: elRef,\n    contentEditable: true,\n    \"data-placeholder\": placeholder,\n    className: [styles.editor, className].filter(Boolean).join(' '),\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onDrop: handleDrop,\n    onPaste: handlePaste,\n    onInput: handleInput\n  }, restProps));\n});\nexport { Editor };","map":null,"metadata":{},"sourceType":"module"}